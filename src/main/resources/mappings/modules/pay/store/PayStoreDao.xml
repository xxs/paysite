<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.pay.dao.store.PayStoreDao">
    
	<sql id="payStoreColumns">
		a.id AS "id",
		a.pay_company_id AS "payCompany.id",
		a.name AS "name",
		a.create_by AS "createBy.id",
		a.update_by AS "updateBy.id",
		a.del_flag AS "delFlag",
		a.status AS "status",
		a.tel AS "tel",
		a.addr AS "addr",
		a.memo AS "memo",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.remarks AS "remarks"
	</sql>
	
	<sql id="payStoreJoins">
	</sql>
    <sql id="payFunctionColumns">
		a.id AS "id",
		a.number AS "number",
		a.name AS "name",
		a.status AS "status",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.memo AS "memo",
		a.del_flag AS "delFlag"
	</sql>
	<select id="get" resultType="PayStore">
		SELECT 
			<include refid="payStoreColumns"/>
		FROM pay_store a
		<include refid="payStoreJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<!-- 根据门店获取门店的功能列表 -->
	<select id="findPayFuncationByPayStoreId" resultType="PayFunction" useCache="true">
		SELECT
			<include refid="payFunctionColumns"/> 
		FROM pay_function a 
		WHERE a.del_flag = 0 and
			a.id in (SELECT d.function_id FROM pay_store_function  d where d.store_id = #{id})
	</select>
	<!-- 根据门店获取门店的未添加的功能按钮列表 -->
	<select id="findPayFuncationListByPayStoreId" resultType="PayFunction" useCache="true">
		SELECT
			<include refid="payFunctionColumns"/> 
		FROM pay_function a 
		WHERE a.del_flag = 0 and
			a.id not in (SELECT d.function_id FROM pay_store_function  d where d.store_id = #{id})
	</select>
	
	<select id="findList" resultType="PayStore">
		SELECT 
			<include refid="payStoreColumns"/>
		FROM pay_store a
		<include refid="payStoreJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="delFlag != null and delFlag != ''">
				AND a.del_flag = #{delFlag}
			</if>
			<if test="status != null and status != ''">
				AND a.status LIKE 
					<if test="dbName == 'oracle'">'%'||#{status}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{status}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{status},'%')</if>
			</if>
			<if test="tel != null and tel != ''">
				AND a.tel LIKE 
					<if test="dbName == 'oracle'">'%'||#{tel}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{tel}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{tel},'%')</if>
			</if>
			<if test="addr != null and addr != ''">
				AND a.addr LIKE 
					<if test="dbName == 'oracle'">'%'||#{addr}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{addr}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{addr},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PayStore">
		SELECT 
			<include refid="payStoreColumns"/>
		FROM pay_store a
		<include refid="payStoreJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO pay_store(
			id,
			pay_company_id,
			name,
			create_by,
			update_by,
			del_flag,
			status,
			tel,
			addr,
			memo,
			create_date,
			update_date,
			remarks
		) VALUES (
			#{id},
			#{payCompany.id},
			#{name},
			#{createBy.id},
			#{updateBy.id},
			#{delFlag},
			#{status},
			#{tel},
			#{addr},
			#{memo},
			#{createDate},
			#{updateDate},
			#{remarks}
		)
	</insert>
	
	<update id="update">
		UPDATE pay_store SET 	
			pay_company_id = #{payCompany.id},
			name = #{name},
			update_by = #{updateBy.id},
			status = #{status},
			tel = #{tel},
			addr = #{addr},
			memo = #{memo},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE pay_store SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<delete id="outpayStore">
		DELETE FROM pay_store_function WHERE store_id = #{0} AND function_id = #{1}
	</delete>
	<insert id="insertPayFunctionToPayStore">
		INSERT INTO pay_store_function(
			store_id,
			function_id
		) VALUES (
			#{0},
			#{1}
		)
	</insert>
	
</mapper>